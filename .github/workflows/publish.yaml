name: Publish to GitHub Packages

on:
  push:
    tags:
      - 'v*'

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{github.repository}}

jobs:
  build:
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write

    strategy:
      fail-fast: false
      matrix:
        node:
          - '18'
          - '20'
        python:
          - '3.8'
          - '3.9'
          - '3.10'
          - '3.11'
          - '3.12'
        target:
          - docker: linux/amd64
            rust: x86_64-unknown-linux-gnu
          - docker: linux/arm64
            rust: aarch64-unknown-linux-gnu

    steps:
      - uses: actions/checkout@v4

      - uses: docker/setup-qemu-action@v3
      - uses: docker/setup-buildx-action@v3

      # https://evilmartians.com/chronicles/build-images-on-github-actions-with-docker-layer-caching
      - name: Cache Docker layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{runner.os}}-buildx-${{matrix.target.docker}}-${{github.sha}}
          restore-keys: |
            ${{runner.os}}-buildx-${{matrix.target.docker}}-

      - uses: docker/login-action@v3
        with:
          registry: ${{env.REGISTRY}}
          username: ${{github.actor}}
          password: ${{secrets.GITHUB_TOKEN}}

      - uses: docker/build-push-action@v4
        id: build
        with:
          file: devcontainer.Dockerfile
          context: .
          platforms: ${{matrix.target.docker}}
          build-args: |
            RUST_TARGET=${{matrix.target.rust}}
            NODE_VERSION=${{matrix.node}}
            PYTHON_VERSION=${{matrix.python}}
          # https://docs.docker.com/build/ci/github-actions/multi-platform/
          outputs: type=image,name=${{env.REGISTRY}}/${{env.IMAGE_NAME}},push-by-digest=true,name-canonical=true,push=true
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new

      - name: Export digest
        run: |
          mkdir -p /tmp/digests/node${{matrix.node}}/python${{matrix.python}}
          digest="${{steps.build.outputs.digest}}"
          touch "/tmp/digests/node${{matrix.node}}/python${{matrix.python}}/${digest#sha256:}"

      - name: Upload digest
        uses: actions/upload-artifact@v3
        with:
          name: digests
          path: /tmp/digests/*
          if-no-files-found: error
          retention-days: 1

      - name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache

  merge-manifests:
    runs-on: ubuntu-latest

    needs:
      - build

    if: |
      needs.build.result == 'success'

    permissions:
      contents: read
      packages: write

    strategy:
      fail-fast: false
      matrix:
        node:
          - '18'
          - '20'
        python:
          - '3.8'
          - '3.9'
          - '3.10'
          - '3.11'
          - '3.12'

    steps:
      - uses: actions/download-artifact@v3
        with:
          name: digests
          path: /tmp/digests

      - uses: docker/setup-buildx-action@v3

      - uses: docker/metadata-action@v5
        id: metadata
        with:
          images: ${{env.REGISTRY}}/${{env.IMAGE_NAME}}
          tags: |
            type=semver,pattern={{version}}
          flavor: |
            latest=auto
            suffix=-node${{matrix.node}}-python${{matrix.python}}

      - uses: docker/login-action@v3
        with:
          registry: ${{env.REGISTRY}}
          username: ${{github.actor}}
          password: ${{secrets.GITHUB_TOKEN}}

      - name: Create manifest list and push
        working-directory: /tmp/digests/node${{matrix.node}}/python${{matrix.python}}
        run: |
          docker buildx imagetools create $(jq -cr '.tags | map("-t " + .) | join(" ")' <<< "$DOCKER_METADATA_OUTPUT_JSON") \
            $(printf '${{env.REGISTRY}}/${{env.IMAGE_NAME}}@sha256:%s ' *)
