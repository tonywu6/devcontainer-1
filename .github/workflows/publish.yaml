name: Publish to GitHub Packages

on:
  push:
    tags:
      - "v*"
    branches:
      - main

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{github.repository}}

jobs:
  build:
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write

    strategy:
      fail-fast: false
      matrix:
        preset:
          - platform: linux/amd64
            suffix: ""
            latest: true
            build-args: ""

          - platform: linux/arm64
            suffix: ""
            latest: true
            build-args: ""

          - platform: linux/amd64
            suffix: -manylinux_2_17
            latest: false
            build-args: |
              DEVCONTAINER_IMAGE=quay.io/pypa/manylinux2014_x86_64:latest
              ZIGBUILD_GLIBC=2.17
              DEFAULT_PYTHON_VERSION=3.10
              DEFAULT_NODE_VERSION=16
              DEFAULT_PNPM_VERSION=8

          - platform: linux/arm64
            suffix: -manylinux_2_17
            latest: false
            build-args: |
              DEVCONTAINER_IMAGE=quay.io/pypa/manylinux2014_aarch64:latest
              ZIGBUILD_GLIBC=2.17
              DEFAULT_PYTHON_VERSION=3.10
              DEFAULT_NODE_VERSION=16
              DEFAULT_PNPM_VERSION=8

    steps:
      - uses: actions/checkout@v4

      - uses: docker/setup-qemu-action@v3
      - uses: docker/setup-buildx-action@v3

      # https://evilmartians.com/chronicles/build-images-on-github-actions-with-docker-layer-caching
      - name: Cache Docker layers
        uses: actions/cache@v4
        with:
          path: /tmp/.buildx-cache
          key: ${{runner.os}}-buildx-${{matrix.preset.platform}}-${{matrix.preset.suffix}}-${{github.sha}}
          restore-keys: |
            ${{runner.os}}-buildx-${{matrix.preset.platform}}-${{matrix.preset.suffix}}-
            ${{runner.os}}-buildx-${{matrix.preset.platform}}-

      - uses: docker/login-action@v3
        with:
          registry: ${{env.REGISTRY}}
          username: ${{github.actor}}
          password: ${{secrets.GITHUB_TOKEN}}

      - uses: docker/build-push-action@v6
        id: build
        with:
          file: .devcontainer/Dockerfile
          context: .
          platforms: ${{matrix.preset.platform}}
          build-args: ${{matrix.preset.build-args}}
          # https://docs.docker.com/build/ci/github-actions/multi-platform/
          outputs: type=image,name=${{env.REGISTRY}}/${{env.IMAGE_NAME}},push-by-digest=true,name-canonical=true,push=true
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new

      - name: Export digest
        run: |
          DIGEST_ROOT="/tmp/digests/${{matrix.preset.suffix}}"
          DIGEST="${{steps.build.outputs.digest}}"
          mkdir -p "$DIGEST_ROOT"
          touch "$DIGEST_ROOT/${DIGEST#sha256:}"

      - name: Upload digest
        uses: actions/upload-artifact@v4
        with:
          name: digests
          path: /tmp/digests/*
          if-no-files-found: error
          retention-days: 1

      - name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache

      - name: Tags to merge
        id: preset
        run: |
          {
            echo "preset<<EOF"
            jq '[ unique_by(.suffix) | .[] | { suffix: .suffix, latest: .latest } ]' <<< '${{matrix}}'
            echo "EOF"
          } "$GITHUB_OUTPUT"

    outputs:
      suffix: ${{steps.preset.outputs.preset}}

  merge-manifests:
    runs-on: ubuntu-latest

    needs:
      - build

    if: |
      needs.build.result == 'success'

    permissions:
      contents: read
      packages: write

    strategy:
      matrix:
        preset: ${{fromJson(needs.build.outputs.suffix)}}

    steps:
      - uses: actions/download-artifact@v4
        with:
          name: digests
          path: /tmp/digests/${{matrix.preset.suffix}}

      - uses: docker/setup-buildx-action@v3

      - uses: docker/metadata-action@v5
        id: metadata
        with:
          images: ${{env.REGISTRY}}/${{env.IMAGE_NAME}}
          tags: |
            type=semver,pattern={{version}},suffix=${{matrix.preset.suffix}},enable=${{startsWith(github.ref, 'refs/tags/v')}}
            type=raw,value=development,suffix=${{matrix.preset.suffix}},enable=${{github.ref == 'refs/heads/main'}}

      - uses: docker/login-action@v3
        with:
          registry: ${{env.REGISTRY}}
          username: ${{github.actor}}
          password: ${{secrets.GITHUB_TOKEN}}

      - name: Create manifest list and push
        working-directory: /tmp/digests/${{matrix.preset.suffix}}
        run: |
          docker buildx imagetools create $(jq -cr '.tags | map("-t " + .) | join(" ")' <<< "$DOCKER_METADATA_OUTPUT_JSON") \
            $(printf '${{env.REGISTRY}}/${{env.IMAGE_NAME}}@sha256:%s ' *)
